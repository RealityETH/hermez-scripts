diff -r test/Makefile ed/Makefile
379c379
< 	$(RUNL1NETWORK)
---
> 	# $(RUNL1NETWORK)
diff -r test/config/debug.node.config.toml ed/config/debug.node.config.toml
108c108
< ForkId = 2
---
> ForkId = 1
diff -r test/config/test.genesis.config.json ed/config/test.genesis.config.json
9c9
<   "genesisBlockNumber": 74,
---
>   "genesisBlockNumber": 32,
102c102
<  }
\ No newline at end of file
---
>  }
diff -r test/config/test.node.config.toml ed/config/test.node.config.toml
35c35
< URL = "http://zkevm-mock-l1-network:8545"
---
> URL = "http://172.17.0.1:8545"
108c108
< ForkId = 2
---
> ForkId = 1
diff -r test/docker-compose.yml ed/docker-compose.yml
7,47d6
<   grafana:
<     container_name: grafana
<     image: grafana/grafana-oss
<     volumes:
<       - ./config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/default.yml:ro
<       - ./config/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/default.yml:ro
<       - ./config/grafana/dashboard-dockers.json:/etc/grafana/provisioning/dashboards/dashboard-dockers.json:ro
<       - ./config/grafana/dashboard-node.json:/etc/grafana/provisioning/dashboards/dashboard-node.json:ro
<     environment:
<       - GF_SECURITY_ADMIN_USER=zkevm
<       - GF_SECURITY_ADMIN_PASSWORD=zkevm
<     ports:
<       - 3000:3000
<     depends_on:
<       - telegraf
< 
<   telegraf:
<     container_name: telegraf
<     image: telegraf
<     volumes:
<       - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
<       - /var/run/docker.sock:/var/run/docker.sock:ro
<     user: telegraf:${DOCKERGID}
<     environment:
<       - POSTGRES_HOST=grafana-db
<       - POSTGRES_USER=user
<       - POSTGRES_PASSWORD=password
<       - POSTGRES_DB=grafana
<     depends_on:
<       - grafana-db
<       - zkevm-json-rpc
< 
<   grafana-db:
<     container_name: grafana-db
<     image: postgres
<     expose:
<       - 5432
<     environment:
<       - POSTGRES_USER=user
<       - POSTGRES_PASSWORD=password
<       - POSTGRES_DB=grafana
211,322d169
<   zkevm-explorer-l1:
<     container_name: zkevm-explorer-l1
<     image: hermeznetwork/hermez-node-blockscout:latest
<     ports:
<       - 4000:4000
<     environment:
<       - NETWORK=ETH
<       - SUBNETWORK=Local Ethereum
<       - COIN=ETH
<       - ETHEREUM_JSONRPC_VARIANT=geth
<       - ETHEREUM_JSONRPC_HTTP_URL=http://zkevm-mock-l1-network:8545
<       - DATABASE_URL=postgres://l1_explorer_user:l1_explorer_password@zkevm-explorer-l1-db:5432/l1_explorer_db
<       - ECTO_USE_SSL=false
<       - MIX_ENV=prod
<     command:
<       - "/bin/sh"
<       - "-c"
<       - "mix do ecto.create, ecto.migrate; mix phx.server"
< 
<   zkevm-explorer-l1-db:
<     container_name: zkevm-explorer-l1-db
<     image: postgres
<     ports:
<       - 5435:5432
<     environment:
<       - POSTGRES_USER=l1_explorer_user
<       - POSTGRES_PASSWORD=l1_explorer_password
<       - POSTGRES_DB=l1_explorer_db
<     command:
<       - "postgres"
<       - "-N"
<       - "500"
< 
<   zkevm-explorer-l2:
<     container_name: zkevm-explorer-l2
<     image: hermeznetwork/hermez-node-blockscout:latest
<     ports:
<       - 4001:4000
<     environment:
<       - NETWORK=POE
<       - SUBNETWORK=Polygon Hermez
<       - COIN=ETH
<       - ETHEREUM_JSONRPC_VARIANT=geth
<       - ETHEREUM_JSONRPC_HTTP_URL=http://zkevm-explorer-json-rpc:8124
<       - DATABASE_URL=postgres://l2_explorer_user:l2_explorer_password@zkevm-explorer-l2-db:5432/l2_explorer_db
<       - ECTO_USE_SSL=false
<       - MIX_ENV=prod
<       - LOGO=/images/blockscout_logo.svg
<       - LOGO_FOOTER=/images/blockscout_logo.svg
<     command:
<       - "/bin/sh"
<       - "-c"
<       - "mix do ecto.create, ecto.migrate; mix phx.server"
< 
<   zkevm-explorer-json-rpc:
<     container_name: zkevm-explorer-json-rpc
<     image: zkevm-node
<     ports:
<       - 8124:8124
<       - 8134:8134 # needed if WebSockets enabled
<     environment:
<       - ZKEVM_NODE_STATEDB_HOST=zkevm-state-db
<       - ZKEVM_NODE_POOL_DB_HOST=zkevm-pool-db
<       - ZKEVM_NODE_RPC_PORT=8124
<       - ZKEVM_NODE_RPC_WEBSOCKETS_PORT=8134
<     volumes:
<       - ./config/test.node.config.toml:/app/config.toml
<       - ./config/test.genesis.config.json:/app/genesis.json
<     command:
<       - "/bin/sh"
<       - "-c"
<       - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components rpc --http.api eth,net,debug,zkevm,txpool,web3"
< 
<   zkevm-explorer-l2-db:
<     container_name: zkevm-explorer-l2-db
<     image: postgres
<     ports:
<       - 5436:5432
<     environment:
<       - POSTGRES_USER=l2_explorer_user
<       - POSTGRES_PASSWORD=l2_explorer_password
<       - POSTGRES_DB=l2_explorer_db
<     command: [ "postgres", "-N", "500" ]
< 
<   zkevm-mock-l1-network:
<     container_name: zkevm-mock-l1-network
<     image: hermeznetwork/geth-zkevm-contracts:v1.1.0-fork.4
<     ports:
<       - 8545:8545
<       - 8546:8546
<     command:
<       - "--http"
<       - "--http.api"
<       - "admin,eth,debug,miner,net,txpool,personal,web3"
<       - "--http.addr"
<       - "0.0.0.0"
<       - "--http.corsdomain"
<       - "*"
<       - "--http.vhosts"
<       - "*"
<       - "--ws"
<       - "--ws.origins"
<       - "*"
<       - "--ws.addr"
<       - "0.0.0.0"
<       - "--dev"
<       - "--datadir"
<       - "/geth_data"
<       - "--syncmode"
<       - "full"
<       - "--rpc.allow-unprotected-txs"
< 
336,346d182
<   zkprover-mock:
<     container_name: zkprover-mock
<     image: hermeznetwork/zkprover-mock:latest
<     ports:
<       - 43061:43061 # MT
<       - 43071:43071 # Executor
<     volumes:
<       - ./vectors/src:/app/testvectors
<     command: >
<       /app/zkprover-mock server --statedb-port 43061 --executor-port 43071 --test-vector-path /app/testvectors
< 
360,380d195
< 
<   zkevm-permissionless-db:
<     container_name: zkevm-permissionless-db
<     image: postgres
<     deploy:
<       resources:
<         limits:
<           memory: 2G
<         reservations:
<           memory: 1G
<     ports:
<       - 5434:5432
<     volumes:
<       - ../db/scripts/single_db_server.sql:/docker-entrypoint-initdb.d/init.sql
<     environment:
<       - POSTGRES_USER=test_user
<       - POSTGRES_PASSWORD=test_password
<       - POSTGRES_DB=test_db
<     command:
<       - "postgres"
<       - "-N"
382,433d196
< 
<   zkevm-permissionless-node:
<     container_name: zkevm-permissionless-node
<     image: zkevm-node
<     ports:
<       - 8125:8125
<     environment:
<       - ZKEVM_NODE_ISTRUSTEDSEQUENCER=false
<       - ZKEVM_NODE_STATEDB_USER=test_user
<       - ZKEVM_NODE_STATEDB_PASSWORD=test_password
<       - ZKEVM_NODE_STATEDB_NAME=state_db
<       - ZKEVM_NODE_STATEDB_HOST=zkevm-permissionless-db
<       - ZKEVM_NODE_POOL_DB_USER=test_user
<       - ZKEVM_NODE_POOL_DB_PASSWORD=test_password
<       - ZKEVM_NODE_POOL_DB_NAME=pool_db
<       - ZKEVM_NODE_POOL_DB_HOST=zkevm-permissionless-db
<       - ZKEVM_NODE_RPC_PORT=8125
<       - ZKEVM_NODE_RPC_SEQUENCERNODEURI=http://zkevm-json-rpc:8123
<       - ZKEVM_NODE_MTCLIENT_URI=zkevm-permissionless-prover:50061
<       - ZKEVM_NODE_EXECUTOR_URI=zkevm-permissionless-prover:50071
<     volumes:
<       - ./config/test.node.config.toml:/app/config.toml
<       - ./config/test.genesis.config.json:/app/genesis.json
<     command:
<       - "/bin/sh"
<       - "-c"
<       - "/app/zkevm-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components \"rpc,synchronizer\""
< 
<   zkevm-permissionless-prover:
<     container_name: zkevm-permissionless-prover
<     image: hermeznetwork/zkevm-prover:b6fe2db
<     ports:
<       # - 50058:50058 # Prover
<       - 50059:50052 # Mock prover
<       - 50068:50061 # MT
<       - 50078:50071 # Executor
<     volumes:
<       - ./config/test.permissionless.prover.config.json:/usr/src/app/config.json
<     command: >
<       zkProver -c /usr/src/app/config.json
< 
<   zkevm-metrics:
<     image: prom/prometheus:v2.39.1
<     container_name: zkevm-metrics
<     restart: unless-stopped
<     ports:
<       - 9090:9090
<     command:
<       - --config.file=/etc/prometheus/prometheus.yml
<       - --web.enable-lifecycle
<     volumes:
<       - ../config/metrics/prometheus:/etc/prometheus
diff -r test/e2e/jsonrpc1_test.go ed/e2e/jsonrpc1_test.go
534c534
< 		require.ErrorContains(t, err, "wtf no contract code at given address")
---
> 		require.ErrorContains(t, err, "oh no contract code at given address")
